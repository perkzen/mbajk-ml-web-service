name: Fetch and Process Data

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

env:
  WINDOW_SIZE: 48
  TOP_FEATURES: 4
  LAT: 46.5547
  LON: 15.6466
  MBAJK_API_KEY: ${{ secrets.MBAJK_API_KEY }}
  DVC_ACCESS_KEY_ID: ${{ secrets.DVC_ACCESS_KEY_ID }}
  DVC_SECRET_ACCESS_KEY: ${{ secrets.DVC_SECRET_ACCESS_KEY }}

jobs:
  fetch_weather_data:
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{ steps.sha_new.outputs.SHA_NEW }}

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --with dev --no-interaction --no-root

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Configure DVC
        run: |
          dvc remote modify origin --local access_key_id $DVC_ACCESS_KEY_ID
          dvc remote modify origin --local secret_access_key $DVC_SECRET_ACCESS_KEY

      - name: DVC pull
        run: |
          dvc pull -r origin
      - name: Run Tests
        run: |
          poetry run poe test_job

      - name: Fetch weather data
        run: |
          poetry run poe fetch_weather_data

      - name: Commit changes to DVC
        run: |
          dvc add data/raw/weather.csv
          dvc push -r origin

      - name: Commit changes to GIT
        run: |
          git config --global user.email "perko.domen@gmail.com"
          git config --global user.name "perkzen"
          git add .
          git commit -m "action: fetch weather data"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Get commit SHA and store it in GITHUB_OUTPUT
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  fetch_bike_data:
    needs: fetch_weather_data
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{ steps.sha_new.outputs.SHA_NEW }}

    permissions:
      contents: write

    steps:
      - env:
          SHA_NEW: ${{ needs.fetch_weather_data.outputs.sha_new }}
        run: echo "$SHA_NEW"

      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.fetch_weather_data.outputs.sha_new }}
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --with dev --no-interaction --no-root

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Configure DVC
        run: |
          dvc remote modify origin --local access_key_id $DVC_ACCESS_KEY_ID
          dvc remote modify origin --local secret_access_key $DVC_SECRET_ACCESS_KEY

      - name: DVC pull
        run: |
          dvc pull -r origin

      - name: Run Tests
        run: |
          poetry run poe test_job

      - name: Fetch bike data
        run: |
          poetry run poe fetch_bike_data

      - name: Commit changes to DVC
        run: |
          dvc add data/raw/mbajk_stations.csv
          dvc push -r origin

      - name: Commit changes to GIT
        run: |
          git config --global user.email "perko.domen@gmail.com"
          git config --global user.name "perkzen"
          git add .
          git commit -m "action: fetch bike data"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Get commit SHA and store it in GITHUB_OUTPUT
        id: sha_new
        run: echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  process:
    needs: fetch_bike_data
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - env:
          SHA_NEW: ${{ needs.fetch_bike_data.outputs.sha_new }}
        run: echo "$SHA_NEW"

      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.fetch_bike_data.outputs.sha_new }}
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --with dev --no-interaction --no-root

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Configure DVC
        run: |
          dvc remote modify origin --local access_key_id $DVC_ACCESS_KEY_ID
          dvc remote modify origin --local secret_access_key $DVC_SECRET_ACCESS_KEY

      - name: DVC pull
        run: |
          dvc pull -r origin

      - name: Process data
        run: |
          poetry run poe process

      - name: Commit changes to DVC
        run: |
          dvc add data/processed/mbajk_*.csv
          dvc push -r origin

      - name: Commit changes to GIT
        run: |
          git config --global user.email "perko.domen@gmail.com"
          git config --global user.name "perkzen"
          git add .
          git commit -m "action: process data"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Get commit SHA and store it in GITHUB_OUTPUT
        id: sha_process
        run: echo "SHA_PROCESS=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

#  validate:
#    runs-on: ubuntu-latest
#    needs:
#      - process
#
#    steps:
#      - env:
#          SHA_PROCESS: ${{ needs.process.outputs.sha_process }}
#        run: echo "$SHA_PROCESS"
#      - name: Checkout code
#        uses: actions/checkout@v2
#        with:
#          ref: ${{ needs.process.outputs.sha_process }}
#          fetch-depth: 0
#
#      - name: Install Poetry
#        run: pipx install poetry
#
#      - name: Setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.12'
#          cache: poetry
#
#      - name: Install dependencies
#        run: |
#          poetry install --with dev --no-interaction --no-root
#
#      - name: Install DVC
#        uses: iterative/setup-dvc@v1
#
#      - name: Configure DVC
#        run: |
#          dvc remote modify origin --local access_key_id $DVC_ACCESS_KEY_ID
#          dvc remote modify origin --local secret_access_key $DVC_SECRET_ACCESS_KEY
#
#      - name: Download reference files
#        env:
#          SHA_NEW: ${{ needs.fetch_bike_data.outputs.sha_new }}
#        run: |
#          chmod +x ./download_datasets.sh
#          /bin/bash ./download_datasets.sh -p reference_
#
#      - name: Download current files
#        run: |
#          chmod +x ./download_datasets.sh
#          /bin/bash ./download_datasets.sh
